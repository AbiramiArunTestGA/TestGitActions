<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<InstructionDefinition Author="Unknown Author" Name="1E-Exchange-TachyonCore-GetCertificateLifetime" ReadablePayload="Which certificates in the device's local machine store have a lifetime %overOrUnder% %numberOfDays% days?" Description="Retrieves all certificates that match the lifetime specified from the local machine store.&#xD;&#xA;" InstructionType="Question" InstructionTtlMinutes="30" ResponseTtlMinutes="30" Version="3.1" xmlns="http://schemas.1e.com/Tachyon/InstructionDefinition/1.0">
  <Payload><![CDATA[@script = HttpGetFile(URL : "getCertificatesLifetime.ps1", Size:12264, Hash:"CC5C726E0DE9EE9AB9F697BAF81F18AF68C66C7267172B6CE8EEA05F0760D117");
Scripting.Run( Language: "PowerShell", ExecutionPolicy : "Override", Script : @script, InterpretAsJson : true , "-overOrUnder", "%overOrUnder%", "-numberOfDays", "%numberOfDays%");
]]></Payload>
  <SchemaJson><![CDATA[[
  {
    "Name": "Format",
    "Type": "String",
    "Length": 16
  },
  {
    "Name": "Subject",
    "Type": "String",
    "Length": 256
  },
  {
    "Name": "Issuer",
    "Type": "String",
    "Length": 256
  },
  {
    "Name": "Thumbprint",
    "Type": "String",
    "Length": 128
  },
  {
    "Name": "FriendlyName",
    "Type": "String",
    "Length": 256
  },
  {
    "Name": "EffectiveDate",
    "Type": "String",
    "Length": 256
  },
  {
    "Name": "ExpirationDate",
    "Type": "String",
    "Length": 256
  },
  {
    "Name": "SerialNumber",
    "Type": "String",
    "Length": 128
  },
  {
    "Name": "SignatureAlgorithm",
    "Type": "String",
    "Length": 64
  },
  {
    "Name": "HasPrivateKey",
    "Type": "String",
    "Length": 16
  }
]]]></SchemaJson>
  <ParameterJson><![CDATA[[
  {
    "Name": "overOrUnder",
    "Pattern": "%overOrUnder%",
    "DataType": "string",
    "ControlType": "valuePicker",
    "Placeholder": "over or under?",
    "Validation": {
      "MaxLength": null,
      "AllowedValues": [
        "Over",
        "Under"
      ]
    }
  },
  {
    "Name": "numberOfDays",
    "Pattern": "%numberOfDays%",
    "DataType": "string",
    "ControlType": "freeText",
    "Placeholder": "number of days",
    "Validation": {
      "MaxLength": "6",
      "AllowedValues": null
    }
  }
]]]></ParameterJson>
  <Resources>
    <Resource Name="GetCertificatesLifetime">
      <Content Type="PowerShell" FileName="getCertificatesLifetime.ps1" Size="12264" Platform="Windows" Hash="CC5C726E0DE9EE9AB9F697BAF81F18AF68C66C7267172B6CE8EEA05F0760D117"><![CDATA[]]></Content>
    </Resource>
  </Resources>
<Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" /><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1" /><Reference URI=""><Transforms><Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature" /></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1" /><DigestValue>vG8H+GMwXumDDhqHTGVCYEh2C64=</DigestValue></Reference></SignedInfo><SignatureValue>bNzMXBLSO7OeKyxArfOXrmAKn0gnHNUtCv/RKotTSibLFlKK2i+5RkyO2c4UtXaRMWjn+tDrzNhF+NicvpqkMrKzR5dIYCFImKbmUH5dyp5TYFJJNoGsJHeZWohSrPfLYV8wl932SNNVSrraMlvz9BkGVXmvOqYoqN/YajHMveB/4rhYH/bnaEjb37MsnHtnic+zYYWqkYdEQQC46H1mZxJk+OYwzScv8EspSQesnFBmGn1FTEU7JNEldMdb2xn+Da5y2B/PezYy5ZF0J54MMJfdoi7KNYu23OsYBlBYbtK/C20OWIlriEsO0SVtOwRfgx8bHXBT2LomNBJKNtjbag==</SignatureValue><KeyInfo><X509Data><X509Certificate>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</X509Certificate></X509Data></KeyInfo></Signature></InstructionDefinition>